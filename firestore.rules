rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // This rule allows a user to read a list of documents (e.g. wasiyats, qarz)
    // but only if they are querying for their own documents.
    function isQueryingOwnData() {
      return request.auth != null && request.query.resource.data.userId == request.auth.uid;
    }
    
    // This function checks if the user is the owner of a document they are trying to access.
    function isOwner(doc) {
      return request.auth != null && doc.userId == request.auth.uid;
    }

    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }
    
    match /pending_users/{docId} {
      allow create;
      allow read, delete: if request.auth != null;
    }
    
    match /wasiyat/{docId} {
      allow read, update, delete: if isOwner(resource.data);
      allow create: if isOwner(request.resource.data);
      allow list: if isQueryingOwnData();
    }
    
    match /qarz/{docId} {
      allow read, update, delete: if isOwner(resource.data);
      allow create: if isOwner(request.resource.data);
      allow list: if isQueryingOwnData();
    }
    
    match /amanat/{docId} {
      allow read, update, delete: if isOwner(resource.data);
      allow create: if isOwner(request.resource.data);
      allow list: if isQueryingOwnData();
    }

    match /witnesses/{docId} {
      allow read, update, delete: if isOwner(resource.data);
      allow create: if isOwner(request.resource.data);
      allow list: if isQueryingOwnData();
    }
  }
}